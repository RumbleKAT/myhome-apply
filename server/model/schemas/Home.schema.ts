import { Schema, model } from 'mongoose';
import {IHomeApply} from "../IHomeApply";
import {homeDetailSchema} from "./HomeDetail.schema";
import {HomeRateSchema} from "./HomeRate.schema";

const homeSchema = new Schema({
    HOUSE_MANAGE_NO : { type: Number, required: true, unique: true, index: true },
    PBLANC_NO: { type: Number },
    HOUSE_NM: { type: String },
    HOUSE_SECD: { type: String },
    HOUSE_SECD_NM: { type: String },
    HOUSE_DTL_SECD: { type: String },
    HOUSE_DTL_SECD_NM: { type: String },
    RENT_SECD: { type: String },
    RENT_SECD_NM: { type: String },
    SUBSCRPT_AREA_CODE: { type: String },
    SUBSCRPT_AREA_CODE_NM: { type: String },
    HSSPLY_ZIP: { type: String },
    HSSPLY_ADRES: { type: String },
    TOT_SUPLY_HSHLDCO: { type: Number },
    RCRIT_PBLANC_DE: { type: String },
    RCEPT_BGNDE: { type: Date },
    RCEPT_ENDDE: { type: Date },
    SPSPLY_RCEPT_BGNDE: { type: String },
    SPSPLY_RCEPT_ENDDE: { type: String },
    GNRL_RNK1_CRSPAREA_RCEPT_PD: { type: String },
    GNRL_RNK1_ETC_GG_RCPTDE_PD: { type: String },
    GNRL_RNK1_ETC_AREA_RCPTDE_PD: { type: String },
    GNRL_RNK2_CRSPAREA_RCEPT_PD: { type: String },
    GNRL_RNK2_ETC_GG_RCPTDE_PD: { type: String },
    GNRL_RNK2_ETC_AREA_RCPTDE_PD: { type: String },
    PRZWNER_PRESNATN_DE: { type: String },
    CNTRCT_CNCLS_BGNDE: { type: String },
    CNTRCT_CNCLS_ENDDE: { type: String },
    HMPG_ADRES: { type: String },
    CNSTRCT_ENTRPS_NM: { type: String },
    MDHS_TELNO: { type: String },
    BSNS_MBY_NM: { type: String },
    MVN_PREARNGE_YM: { type: String },
    SPECLT_RDN_EARTH_AT: { type: String },
    MDAT_TRGET_AREA_SECD: { type: String },
    PARCPRC_ULS_AT: { type: String },
    IMPRMN_BSNS_AT: { type: String },
    PUBLIC_HOUSE_EARTH_AT: { type: String },
    LRSCL_BLDLND_AT: { type: String },
    NPLN_PRVOPR_PUBLIC_HOUSE_AT: { type: String },
    SEARCH_HOUSE_SECD: { type: String },
    GNRL_RCEPT_BGNDE: { type: String },
    GNRL_RCEPT_ENDDE: { type: String },
    MODEL_NO: { type: String },
    HOUSE_TY: { type: String },
    SUPLY_AR: { type: String },
    SUPLY_HSHLDCO: { type: Number },
    SPSPLY_HSHLDCO: { type: Number },
    MNYCH_HSHLDCO: { type: Number },
    NWWDS_HSHLDCO: { type: Number },
    LFE_FRST_HSHLDCO: { type: Number },
    OLD_PARNTS_SUPORT_HSHLDCO: { type: Number },
    INSTT_RECOMEND_HSHLDCO: { type: Number },
    ETC_HSHLDCO: { type: Number },
    TRANSR_INSTT_ENFSN_HSHLDCO: { type: Number },
    LTTOT_TOP_AMOUNT: { type: String },
    GP: { type: String },
    TP: { type: String },
    EXCLUSE_AR: { type: Number },
    SUPLY_AMOUNT: { type: String },
    SUBSCRPT_REQST_AMOUNT: { type: String },
    SUBSCRPT_RANK_CODE: { type: Number },
    RESIDE_SECD: { type: String },
    RESIDE_SENM: { type: String },
    LWET_SCORE: { type: Number },
    TOP_SCORE: { type: Number },
    AVRG_SCORE: { type: Number },
    RESIDNT_PRIOR_AT: { type: String },
    RESIDNT_PRIOR_SENM: { type: String },
    SPSPLY_KND_CODE: { type: String },
    SPSPLY_KND_NM: { type: String },
    SPSPLY_KND_HSHLDCO: { type: Number },
    NORMAL_HSHLDCO: { type: Number },
    NORMAL_REQ_CNT: { type: String },
    MNYCH_REQ_CNT: { type: String },
    NWWDS_REQ_CNT: { type: String },
    LFE_FRST_REQ_CNT: { type: String },
    OLD_PARNTS_SUPORT_REQ_CNT: { type: String },
    INSTT_RECOMEND_REQ_CNT: { type: String },
    NORMAL_CMPET_RATE: { type: String },
    MNYCH_CMPET_RATE: { type: String },
    NWWDS_CMPET_RATE: { type: String },
    LFE_FRST_CMPET_RATE: { type: String },
    OLD_PARNTS_SUPORT_CMPET_RATE: { type: String },
    INSTT_RECOMEND_CMPET_RATE: { type: String },
    REMNDR_HSHLD_PBLANC_TYCD: { type: String },
    REQ_CNT: { type: String },
    CMPET_RATE: { type: String },
    SUBSCRPT_RCEPT_BGNDE : {type : Date},
    SUBSCRPT_RCEPT_ENDDE : {type : Date},
    HOME_DETAILS : {
        type: [homeDetailSchema],
        default : []
    },
    HOME_RATES : {
        type : [HomeRateSchema],
        default : []
    },
    CATEGORY : {
        type : String
    },
    CRDAT : {
        type : Date
    }
})

export const Home = model<IHomeApply>('HomeApply',homeSchema);